@model KvotaWeb.Models.Items.UFkachestvo


<div id="@Model.Id">
    @Html.AntiForgeryToken()
    <h4 style="margin-bottom:0px;" class="col-sm-11">@KvotaWeb.Models.ListItem.GetTipProdName(@Model.TipProd):</h4>
    <a>
        <img src="/Images/delete.png" height="27" style="margin:1px 1px; cursor: pointer;" onclick="OnDeleteSubSuvenirEvent(@Model.Id);" />
    </a>
    <hr style="margin-top:3px;margin-bottom:10px;border-width:5px">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ParentId)
    @Html.HiddenFor(model => model.TipProd)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="control-label col-sm-5">
            @Html.LabelFor(model => model.Izdelie)
        </div>
        <div class="col-sm-7">
            @Html.DropDownListFor(model => model.Izdelie, @ViewData["params1"] as SelectList, "(не выбрано)"
                     , new { @id = "paramUFkachestvo1" + Model.Id, @class = "form-control", @onchange = "OnChangeParamEventUFkachestvo1(" + Model.Id + ");" })
            @Html.ValidationMessageFor(model => model.Izdelie, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="@("RazmerZapechatkiParamDiv"+Model.Id)" style=@ViewData["RazmerZapechatkiParamDivStyle"]>
        <div class="control-label col-sm-5">
            @Html.LabelFor(model => model.RazmerZapechatki)
        </div>
        <div class="col-sm-7">
            @Html.DropDownListFor(model => model.RazmerZapechatki, @ViewData["params2"] as SelectList, "(не выбрано)"
                     , new { @id = "paramUFkachestvo2" + Model.Id, @class = "form-control", @onchange = "OnChangeEvent();" })
            @Html.ValidationMessageFor(model => model.RazmerZapechatki, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" id="@("paramDiv5"+Model.Id)" style=@ViewData["paramDivStyle5"] align="left">
        <div class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
            @Html.EditorFor(model => model.Dvustoronnya, new { htmlAttributes = new { @id = "paramUFkachestvo5" + Model.Id, @onchange = "OnChangeEvent();" } })
            @Html.LabelFor(model => model.Dvustoronnya)
        </div>
    </div>

    <div class="form-group" id="@("paramDiv6"+Model.Id)" style=@ViewData["paramDivStyle6"] align="left">
        <div class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
            @Html.EditorFor(model => model.Zalivka50, new { htmlAttributes = new { @id = "paramUFkachestvo6" + Model.Id, @onchange = "OnChangeEvent();" } })
            @Html.LabelFor(model => model.Zalivka50)
        </div>
    </div>

    <div class="form-group"  id="@("paramDiv7"+Model.Id)" style=@ViewData["paramDivStyle7"] align="left">
        <div class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
            @Html.EditorFor(model => model.SPodyomom, new { htmlAttributes = new { @id = "paramUFkachestvo7" + Model.Id, @onchange = "OnChangeEvent();" } })
            @Html.LabelFor(model => model.SPodyomom)
        </div>
    </div>

    <!--<div class="form-group">
        <label class="control-label col-sm-5">Срок изготовления:</label>
        <label class="control-label col-sm-7" style="text-align:left;">@Model.Srok </label>
    </div>-->

    @if (Model.Description != null)
    {
        <div class="form-group">
            <label class="control-label col-sm-5">Примечание:</label>
            <label class="control-label col-sm-7" style="text-align:left;">@Model.Description </label>
        </div>
    }
    <script type="text/javascript">
    function OnChangeParamEventUFkachestvo1(modelId) {
        //var catId = $(this).val();
        //alert(modelId);
        var catId = $('#paramUFkachestvo1'+modelId).val();
        if (catId != 641) {//== 172 || catId == 701) {
                var url = '@Url.Action("fillParam2", "Product")';
                $.getJSON(url, { catId: catId }, function (result) {
                    var ddl = $('#paramUFkachestvo2' + modelId);
                    ddl.empty();
                    $(result).each(function () {
                        $(document.createElement('option')).attr('value', this.id).text(this.tip).appendTo(ddl);
                    });
                    OnChangeEvent();
                    $('#paramUFkachestvo2' + modelId).focus();
                });
              document.getElementById('RazmerZapechatkiParamDiv' + modelId).style.display = "block";
            }
            else {
              document.getElementById('RazmerZapechatkiParamDiv' + modelId).style.display = "none";
            }
        OnChangeEvent();
            if (catId == 702) {
                document.getElementById('paramDiv5' + modelId).style.display = "block";
                document.getElementById('paramDiv6' + modelId).style.display = "block";
                document.getElementById('paramDiv7' + modelId).style.display = "block";
            }
            else {
                document.getElementById('paramDiv5' + modelId).style.display = "none";
                document.getElementById('paramDiv6' + modelId).style.display = "none";
                document.getElementById('paramDiv7' + modelId).style.display = "none";
            }
        }
    </script>
</div>