@model KvotaWeb.Models.Items.UFkachestvo


<div>
    @Html.AntiForgeryToken()
    <h4 style="margin-bottom:0px;">@KvotaWeb.Models.ListItem.GetTipProdName(@Model.TipProd):</h4>
    <hr style="margin-top:3px;margin-bottom:10px;border-width:5px">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ParentId)
    @Html.HiddenFor(model => model.TipProd)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="control-label col-sm-5">
            @Html.LabelFor(model => model.Izdelie)
        </div>
        <div class="col-sm-7">
            @Html.DropDownListFor(model => model.Izdelie, @ViewData["params1"] as SelectList, "(не выбрано)", new { @id = "paramUFkachestvo1", @class = "form-control", @onchange = "OnChangeParamEventUFkachestvo1();" })
            @Html.ValidationMessageFor(model => model.Izdelie, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="RazmerZapechatkiParamDiv" style=@ViewData["RazmerZapechatkiParamDivStyle"]>
        <div class="control-label col-sm-5">
            @Html.LabelFor(model => model.RazmerZapechatki)
        </div>
        <div class="col-sm-7">
            @Html.DropDownListFor(model => model.RazmerZapechatki, @ViewData["params2"] as SelectList, "(не выбрано)", new { @id = "paramUFkachestvo2", @class = "form-control", @onchange = "OnChangeEvent();" })
            @Html.ValidationMessageFor(model => model.RazmerZapechatki, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" id="IndividPersParamDiv" style=@ViewData["IndividPersParamDivStyle"] align="left">
        @*<label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.IndividPers, new { htmlAttributes = new { @id = "param4", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param4" id="paramLabel4">@Html.LabelFor(model => model.IndividPers)</label>
            </label>*@
        <div class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
            @Html.EditorFor(model => model.IndividPers, new { htmlAttributes = new { @onchange = "OnChangeEvent();" } })
            @Html.LabelFor(model => model.IndividPers)
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-sm-5">Срок изготовления:</label>
        <label class="control-label col-sm-7" style="text-align:left;">@Model.Srok </label>
    </div>

    @if (Model.Description != null)
    {
        <div class="form-group">
            <label class="control-label col-sm-5">Примечание:</label>
            <label class="control-label col-sm-7" style="text-align:left;">@Model.Description </label>
        </div>
    }
</div>
<script type="text/javascript">
    function OnChangeParamEventUFkachestvo1() {
            //var catId = $(this).val();
        var catId = $('#paramUFkachestvo1').val();
            if (catId == 172) {
                document.getElementById('RazmerZapechatkiParamDiv').style.display = "block";
                document.getElementById('IndividPersParamDiv').style.display = "none";
                var url = '@Url.Action("fillParam2", "Product")';
                $.getJSON(url, { catId: catId }, function (result) {
                    var ddl = $('#paramUFkachestvo2');
                    ddl.empty();
                    $(result).each(function () {
                        $(document.createElement('option')).attr('value', this.id).text(this.tip).appendTo(ddl);
                    });

                    $('#paramUFkachestvo2').focus();
                });
            }
            else {
                document.getElementById('RazmerZapechatkiParamDiv').style.display = "none";
                document.getElementById('IndividPersParamDiv').style.display = "block";
            }
            OnChangeEvent();
        }
</script>