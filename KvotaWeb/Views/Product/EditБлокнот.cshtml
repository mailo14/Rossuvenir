@model KvotaWeb.Models.Items.Blocknot

<form id="myform" method="post" action="/Product/EditБлокнот" >
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
    <h4>Элемент заказа № @Model.Id</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div class="control-label col-sm-5">
                @Html.LabelFor(model => model.Tiraz)
            </div>
            <div class="col-sm-7">
                @Html.EditorFor(model => model.Tiraz, new { htmlAttributes = new { @class = "form-control", @onkeyup = "OnChangeEvent();" } })
                @Html.ValidationMessageFor(model => model.Tiraz, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group" id="paramDiv11" style=@ViewData["paramDivStyle11"]>
        <label id="paramLabel11" class="control-label col-sm-5">Формат:</label>
        <div class="col-sm-7">
            @Html.DropDownListFor(model => model.param11, @ViewData["paramBag11"] as SelectList, "(не выбрано)", new { @id = "param11", @class = "form-control", @onchange = "OnChangeEvent();" })
            @Html.ValidationMessageFor(model => model.param11, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group" id="paramDiv12" style=@ViewData["paramDivStyle12"]>
            <label id="paramLabel12" class="control-label col-sm-5">@ViewData["paramLabel12"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param12, @ViewData["paramBag12"] as SelectList, "(не выбрано)", new { @id = "param12", @class = "form-control", @onchange = "OnChangeEvent();" })
                @Html.ValidationMessageFor(model => model.param12, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv13" style=@ViewData["paramDivStyle13"]>
            <label id="paramLabel13" class="control-label col-sm-5">@ViewData["paramLabel13"]</label>
            <div class="col-sm-7">
                @Html.EditorFor(model => model.param13, new { htmlAttributes = new { @class = "form-control", @onkeyup = "OnChangeEvent();" } })
                @Html.ValidationMessageFor(model => model.param13, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="paramDiv14" style=@ViewData["paramDivStyle14"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param14, new { htmlAttributes = new { @id = "param14", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param14" id="paramLabel14">@ViewData["paramLabel14"]</label>
            </label>
        </div>
        <div class="form-group" id="paramDiv15" style=@ViewData["paramDivStyle15"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param15, new { htmlAttributes = new { @id = "param15", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param15" id="paramLabel15">@ViewData["paramLabel15"]</label>
            </label>
        </div>
    </div>

    <div id="vidDiv2" style=@ViewData["vidDivStyle2"]>
        <hr class="divider" />
        <div class="form-group">
            <label class="control-label col-sm-5">Вид нанесения 2:</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.vid2, @ViewBag.vidi as SelectList, "(не выбрано)", new { @id = "vid2", @class = "form-control", @onchange = "OnChangeVidEvent(2);" })
                @Html.ValidationMessageFor(model => model.vid2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv21" style=@ViewData["paramDivStyle21"]>
            <label id="paramLabel21" class="control-label col-sm-5">@ViewData["paramLabel21"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param21, @ViewData["paramBag21"] as SelectList, "(не выбрано)", new { @id = "param21", @class = "form-control", @onchange = "OnChangeParam1Event(2);" })
                @Html.ValidationMessageFor(model => model.param21, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv22" style=@ViewData["paramDivStyle22"]>
            <label id="paramLabel22" class="control-label col-sm-5">@ViewData["paramLabel22"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param22, @ViewData["paramBag22"] as SelectList, "(не выбрано)", new { @id = "param22", @class = "form-control", @onchange = "OnChangeEvent();" })
                @Html.ValidationMessageFor(model => model.param22, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv23" style=@ViewData["paramDivStyle23"]>
            <label id="paramLabel23" class="control-label col-sm-5">@ViewData["paramLabel23"]</label>
            <div class="col-sm-7">
                @Html.EditorFor(model => model.param23, new { htmlAttributes = new { @class = "form-control", @onkeyup = "OnChangeEvent();" } })
                @Html.ValidationMessageFor(model => model.param23, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv24" style=@ViewData["paramDivStyle24"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param24, new { htmlAttributes = new { @id = "param24", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param24" id="paramLabel24">@ViewData["paramLabel24"]</label>
            </label>
        </div>
        <div class="form-group" id="paramDiv25" style=@ViewData["paramDivStyle25"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param25, new { htmlAttributes = new { @id = "param25", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param25" id="paramLabel25">@ViewData["paramLabel25"]</label>
            </label>
        </div>
    </div>

    <div id="vidDiv3" style=@ViewData["vidDivStyle3"]>
        <hr class="divider" />
        <div class="form-group">
            <label class="control-label col-sm-5">Вид нанесения 3:</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.vid3, @ViewBag.vidi as SelectList, "(не выбрано)", new { @id = "vid3", @class = "form-control", @onchange = "OnChangeVidEvent(3);" })
                @Html.ValidationMessageFor(model => model.vid3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv31" style=@ViewData["paramDivStyle31"]>
            <label id="paramLabel31" class="control-label col-sm-5">@ViewData["paramLabel31"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param31, @ViewData["paramBag31"] as SelectList, "(не выбрано)", new { @id = "param31", @class = "form-control", @onchange = "OnChangeParam1Event(3);" })
                @Html.ValidationMessageFor(model => model.param31, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv32" style=@ViewData["paramDivStyle32"]>
            <label id="paramLabel32" class="control-label col-sm-5">@ViewData["paramLabel32"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param32, @ViewData["paramBag32"] as SelectList, "(не выбрано)", new { @id = "param32", @class = "form-control", @onchange = "OnChangeEvent();" })
                @Html.ValidationMessageFor(model => model.param32, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv33" style=@ViewData["paramDivStyle33"]>
            <label id="paramLabel33" class="control-label col-sm-5">@ViewData["paramLabel33"]</label>
            <div class="col-sm-7">
                @Html.EditorFor(model => model.param33, new { htmlAttributes = new { @class = "form-control", @onkeyup = "OnChangeEvent();" } })
                @Html.ValidationMessageFor(model => model.param33, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv34" style=@ViewData["paramDivStyle34"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param34, new { htmlAttributes = new { @id = "param34", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param34" id="paramLabel34">@ViewData["paramLabel34"]</label>
            </label>
        </div>
        <div class="form-group" id="paramDiv35" style=@ViewData["paramDivStyle35"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param35, new { htmlAttributes = new { @id = "param35", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param35" id="paramLabel35">@ViewData["paramLabel35"]</label>
            </label>
        </div>
    </div>

    <div id="vidDiv4" style=@ViewData["vidDivStyle4"]>
        <hr class="divider" />
        <div class="form-group">
            <label class="control-label col-sm-5">Вид нанесения 4:</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.vid4, @ViewBag.vidi as SelectList, "(не выбрано)", new { @id = "vid4", @class = "form-control", @onchange = "OnChangeVidEvent(4);" })
                @Html.ValidationMessageFor(model => model.vid4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv41" style=@ViewData["paramDivStyle41"]>
            <label id="paramLabel41" class="control-label col-sm-5">@ViewData["paramLabel41"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param41, @ViewData["paramBag41"] as SelectList, "(не выбрано)", new { @id = "param41", @class = "form-control", @onchange = "OnChangeParam1Event(4);" })
                @Html.ValidationMessageFor(model => model.param41, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv42" style=@ViewData["paramDivStyle42"]>
            <label id="paramLabel42" class="control-label col-sm-5">@ViewData["paramLabel42"]</label>
            <div class="col-sm-7">
                @Html.DropDownListFor(model => model.param42, @ViewData["paramBag42"] as SelectList, "(не выбрано)", new { @id = "param42", @class = "form-control", @onchange = "OnChangeEvent();" })
                @Html.ValidationMessageFor(model => model.param42, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv43" style=@ViewData["paramDivStyle43"]>
            <label id="paramLabel43" class="control-label col-sm-5">@ViewData["paramLabel43"]</label>
            <div class="col-sm-7">
                @Html.EditorFor(model => model.param43, new { htmlAttributes = new { @class = "form-control", @onkeyup = "OnChangeEvent();" } })
                @Html.ValidationMessageFor(model => model.param43, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="paramDiv44" style=@ViewData["paramDivStyle44"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param44, new { htmlAttributes = new { @id = "param44", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param44" id="paramLabel44">@ViewData["paramLabel44"]</label>
            </label>
        </div>
        <div class="form-group" id="paramDiv45" style=@ViewData["paramDivStyle45"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                @Html.EditorFor(model => model.param45, new { htmlAttributes = new { @id = "param45", @class = "form-check-input", @onchange = "OnChangeEvent();" } })
                <label for="param45" id="paramLabel45">@ViewData["paramLabel45"]</label>
            </label>
        </div>
    </div>*@


        <div class="form-group">
            <hr class="divider" />
            <label class="control-label col-sm-5">Итого:</label>
            <div class="col-sm-7">
                @Html.EditorFor(model => model.TotalLabel, new { htmlAttributes = new { @class = "form-control", @id = "totalLabel", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TotalLabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="askBetterPriceDiv" style=@ViewData["askBetterPriceDivStyle"] align="left">
            <label class="col-md-offset-5 col-md-7 col-sm-offset-5 col-sm-7">
                *Для получения лучшей цены обратитесь в Отдел реализации
            </label>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-5 col-sm-7">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
<script type="text/javascript">
    function OnChangeParam1Event(vidNum) {
        //var catId = $(this).val();
       // alert(OnChangeParam1Event);
        catId = $('#param' + vidNum.toString()+1).val();
        //alert(catId);
        var vidId=$('#vid' + vidNum).val();
        if (vidId != 201 && vidId != 205 && vidId != 29) {
            var url = '@Url.Action("fillParam2", "Product")';
            $.getJSON(url, { catId: catId }, function (result) {
          //      alert(catId);
                var ddl = $('#param' + vidNum.toString() + 2);
                ddl.empty();
                $(result).each(function () {
                    $(document.createElement('option')).attr('value', this.id).text(this.tip).appendTo(ddl);
                });
                OnChangeEvent();
                $('#param' + vidNum + 2).focus();
            });
        }
        else {
           // alert('else');
            $('#param' + vidNum + 3).focus();
            OnChangeEvent();
        }
    }
    function OnChangeVidEvent(vidNum)
    {
        var p1 = document.getElementById('param' + vidNum.toString() + 1);
        var p2 = document.getElementById('param' + vidNum.toString() + 2);
        var p3 = document.getElementById('param' + vidNum.toString() + 3);
        var p4 = document.getElementById('param' + vidNum.toString() + 4);
        var p4 = document.getElementById('param' + vidNum.toString() + 5);
        $('#param' + vidNum.toString() + 1).val("");
        $('#param' + vidNum.toString() + 2).val("");
        $('#param' + vidNum.toString() + 3).val("");
        $('#param' + vidNum.toString() + 4).prop("checked", false);
        $('#param' + vidNum.toString() + 5).prop("checked", false);

        var vidId = $('#vid' + vidNum).val();
        if (vidId > 0) {
            if (vidId == 28) document.getElementById('paramDiv' + vidNum + 1).style.display = "none";
            else document.getElementById('paramDiv' + vidNum + 1).style.display = "block";
            var url = '@Url.Action("fillParam1", "Product")';
            $.getJSON(url, { catId: vidId }, function (data) {
                var pair = data[0];
                //+param1 name=pair.Key
                document.getElementById('paramLabel' + vidNum.toString() + 1).innerHTML = pair.Key;
                var values = pair.Value
                var ddl = $('#param' + vidNum.toString() + 1);
                ddl.empty();
                for (var j in values) {
                    var el = values[j];
                    $(document.createElement('option')).attr('value', el.id).text(el.tip).appendTo(ddl);
                }
                //alert(i[0].tip);
                pair = data[1];
                //alert(pair.Key);
                if (pair.Key != "") {
                    document.getElementById('paramLabel' + vidNum.toString() + 2).innerHTML = pair.Key;
                    // if(vidId!=29){//not pockets
                    var values = pair.Value
                    ddl = $('#param' + vidNum.toString() + 2);
                    ddl.empty();
                    for (var j in values) {
                        var el = values[j];
                        //alert(j);
                        $(document.createElement('option')).attr('value', el.id).text(el.tip).appendTo(ddl);
                    }
                    // }
                    $('#param' + vidNum.toString() + 3).val("");
                    //+param2 name=pair.Key
                    //+hide param3
                    document.getElementById('paramDiv' + vidNum + 2).style.display = "block";
                    document.getElementById('paramDiv' + vidNum + 3).style.display = "none";
                } else {
                    $('#param' + vidNum.toString() + 2).val("");
                    document.getElementById('paramDiv' + vidNum + 3).style.display = "block";
                    document.getElementById('paramDiv' + vidNum + 2).style.display = "none";
                    //+hide param2
                    //+param3 name=pair.Key
                }
                pair = data[2];
                if (pair.Key != "") {document.getElementById('paramLabel' + vidNum.toString() + 3).innerHTML = pair.Key;
                document.getElementById('paramDiv' + vidNum + 3).style.display = "block";
            }
                else document.getElementById('paramDiv' + vidNum + 3).style.display = "none";

                pair = data[3];
                if (pair.Key != "") {
                    document.getElementById('paramLabel' + vidNum.toString() + 4).innerHTML = pair.Key;
                    document.getElementById('paramDiv' + vidNum + 4).style.display = "block";
                }
                else document.getElementById('paramDiv' + vidNum + 4).style.display = "none";

                pair = data[4];
                if (pair.Key != "") {
                    document.getElementById('paramLabel' + vidNum.toString() + 5).innerHTML = pair.Key;
                    document.getElementById('paramDiv' + vidNum + 5).style.display = "block";
                }
                else document.getElementById('paramDiv' + vidNum + 5).style.display = "none";


                //}
                OnChangeEvent();
                $('#param' + vidNum.toString() + 1).focus()
            });
        }
        else {
            document.getElementById('paramDiv' + vidNum + 1).style.display = "none";
            document.getElementById('paramDiv' + vidNum + 2).style.display = "none";
            document.getElementById('paramDiv' + vidNum + 3).style.display = "none";
            document.getElementById('paramDiv' + vidNum + 4).style.display = "none";
            document.getElementById('paramDiv' + vidNum + 5).style.display = "none";
            OnChangeEvent();
        }

       @* var existPocket = false;
        if ($('#vid1').val() == 29 || $('#vid2').val() == 29 || $('#vid3').val() == 29 || $('#vid4').val() == 29) {
            document.getElementById('cebestDiv').style.display = "none";
            $('#cebestBag').val(0);
        }
       else document.getElementById('cebestDiv').style.display = "block";*@
            
 }
 function OnChangeKolvoMestEvent()
    {
    }
    function OnChangeEvent()
    {
        $("body").css("cursor", "progress");
       // var test = '<%= new JavaScriptSerializer().Serialize(ViewData["labelByVid"])) %>';        
       // alert(test);
       // alert(test[24][1]);
        //test = '<%= new JavaScriptSerializer().Serialize(ViewData["labelByVid"][24][1])) %>';
       // alert("upd");
        //return;
            $.ajax({
                type: 'POST',
                url: "/Product/Recalc",
                data: $('#myform').serialize(),
                success: function (data, res) {
                    document.getElementById('total').value = data.total;
                    document.getElementById('totalLabel').value = data.totalLabel;
                    if (data.askBetterPrice)
                        document.getElementById('askBetterPriceDiv').style.display = "block";
                    else
                        document.getElementById('askBetterPriceDiv').style.display = "none";
                    $("body").css("cursor", "default");
                },
                error: function () {
                    //$("#commentList").append($("#name").val() + "<br />" + $("#body").val());
                    alert("There was an error submitting comment");
                    $("body").css("cursor", "default");
                }
            });
}
</script>
<script type='text/javascript'>
    //alert("Stop that parsing!");.style.display = "block";
    //$('#param' + vidNum + 2)
    //elem.style.display = "none";
    /* OnChangeVidEvent(1);
   OnChangeVidEvent(2);
    OnChangeVidEvent(3);
    OnChangeVidEvent(4);*/
</script>
   @* <div>       
@Html.ActionLink("К заказу", "Edit", "Home",new { id = @Model.listId }, null)
    </div>*@
